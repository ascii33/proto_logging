/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package android.stats.mediametrics_message;

/**
 * Track Media Codec usage
 * Logged from:
 *   frameworks/av/media/libstagefright/MediaCodec.cpp
 *   frameworks/av/services/mediaanalytics/statsd_codec.cpp
 * Next Tag: 46
 */
message CodecData {
  optional string codec = 1;
  optional string mime = 2;
  optional string mode = 3;
  optional int32 encoder = 4;
  optional int32 secure = 5;
  optional int32 width = 6;
  optional int32 height = 7;
  optional int32 rotation = 8;
  optional int32 crypto = 9;
  optional int32 profile = 10;
  optional int32 level = 11;
  optional int32 max_width = 12;
  optional int32 max_height = 13;
  optional int32 error_code = 14;
  optional string error_state = 15;
  optional int64 latency_max = 16;
  optional int64 latency_min = 17;
  optional int64 latency_avg = 18;
  optional int64 latency_count = 19;
  optional int64 latency_unknown = 20;
  optional int32 queue_input_buffer_error = 21;
  optional int32 queue_secure_input_buffer_error = 22;
  optional string bitrate_mode = 23;
  optional int32 bitrate = 24;
  optional int64 lifetime_millis = 25;
  optional string log_session_id = 26;
  optional int32 channel_count = 27;
  optional int32 sample_rate = 28;
  optional int64 video_encode_bytes = 29;
  optional int64 video_encode_frames = 30;
  optional int64 video_input_bytes = 31;
  optional int64 video_input_frames = 32;
  optional int64 video_encode_duration_us = 33;
  optional int32 color_format = 34;
  optional double frame_rate = 35;
  optional double capture_rate = 36;
  optional double operating_rate = 37;
  optional int32 priority = 38;
  optional int32 video_qp_i_min = 39;
  optional int32 video_qp_i_max = 40;
  optional int32 video_qp_p_min = 41;
  optional int32 video_qp_p_max = 42;
  optional int32 video_qp_b_min = 43;
  optional int32 video_qp_b_max = 44;
  optional int32 original_bitrate = 45;
}

/**
 * Track information about recordings (e.g. camcorder)
 * Logged from
 *   frameworks/av/media/libmediaplayerservice/StagefrightRecorder.cpp
 *   frameworks/av/services/mediaanalytics/if_statsd.cpp
 * Next Tag: 23
 */
message RecorderData {
    optional string audio_mime = 1;
    optional string video_mime = 2;
    optional int32 video_profile = 3;
    optional int32 video_level = 4;
    optional int32 width = 5;
    optional int32 height = 6;
    optional int32 rotation = 7;
    optional int32 framerate = 8;
    optional int32 capture_fps = 9;
    optional double capture_fps_enable = 10;
    optional int64 duration_millis = 11;
    optional int64 paused_millis = 12;
    optional int32 paused_count = 13;
    optional int32 audio_bitrate = 14;
    optional int32 audio_channels = 15;
    optional int32 audio_samplerate = 16;
    optional int32 movie_timescale = 17;
    optional int32 audio_timescale = 18;
    optional int32 video_timescale = 19;
    optional int32 video_bitrate = 20;
    optional int32 iframe_interval = 21;
    optional string log_session_id = 22;
}
